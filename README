rundev
======
Sub-second inner-loop iterations for containers running on Google Cloud Run.

Installation
------------

For now, you can install the latest version at:

- macOS: https://storage.googleapis.com/rundev-test/nightly/client/darwin/rundev-latest
- Linux: https://storage.googleapis.com/rundev-test/nightly/client/linux/rundev-latest

Then:

    mv rundev-latest rundev
    chmod +x rundev
    mv rundev /usr/local/bin

Alternatively you can find the list of nightly releases by running:

    gsutil ls -l gs://rundev-test/nightly/client/

Start developing
---------------

Switch into your application's source directory.

For an application that picks up new source code by restarting, just run:

    rundev

For an application that needs a build step after syncing the new code, you can
specify a build command like:

    rundev -build-cmd 'go build -o /out/server .'

Or simply you can annotate your RUN directive with a "# rundev" comment like:

    RUN go build -o /out/server . # rundev

This command will:

  1. in-memory overwrite your Dockerfile to install and run the "rundevd"
     daemon which is an harness around your original ENTRYPOINT/CMD.
  2. build and push a container image to your project
  2. deploy your app to Cloud Run
  3. start a local HTTP server on localhost:8080 for development.

Visit http://localhost:8080 to access your application with live code sync.
Change your code, and visit your address to see the updated application.
When you're done developing, hit Ctrl+C once for cleanup and exit.

Every time you make a request to this address:
  - local file system will be synced (if necessary) to containers on Cloud Run
  - your app will be rebuilt and restarted (if necessary)
  - your query will be proxied to Cloud Run container instances.

In the command above:
  -local-dir contains path to source code on your machine.
  -run-cmd specifies entrypoint to your application
  -build-cmd (optional) is the command to rebuild your application
  -remote-dir specifies the directory inside the container to sync files to
  -addr specifies an alternative address to listen on


Debug endpoints
---------------

/rundev/debugz : debug data for rundev client
/rundev/fsz    : local fs tree (+ ?full)
/rundevd/fsz   : remote fs tree (+ ?full)
/rundevd/debugz  : debug data for rundevd daemon
/rundevd/procz   : logs of current process
/rundevd/pstree  : process tree
/rundevd/restart : restart the user process
/rundevd/kill   : kill the user process (or specify ?pid=)
